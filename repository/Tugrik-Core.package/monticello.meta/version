(name 'Tugrik-Core-dkh.24' message 'checkpoint ... continue error handling work ... most tests pass' id '6c2202db-a136-4f4f-9432-f39aebabaac3' date '16 February 2016' time '10:45:15.440441 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.23' message 'checkpoint ... begin process of introducing error handling' id '7437a20e-42d2-494b-898f-1f889296f7c5' date '16 February 2016' time '9:38:32.824922 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.22' message 'use gci prefix for the method wrapping gci library calls' id 'e915b7a0-0391-410d-b11b-85f719c5246d' date '16 February 2016' time '8:19:57.213969 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.21' message 'rename GciTs32xErrSType to Gci32xErrSType' id '1106db38-1fba-41f1-87c3-13fd533b923f' date '15 February 2016' time '7:58:59.355188 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.20' message 'rename Tugric* classes to Tugrik*' id '483f79fb-3edd-436f-8d1c-efd6990e750b' date '15 February 2016' time '7:56:40.816662 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.19' message 'add transaction gci functions (abort, cbegin, and commit) - blocking and non-blocking' id '07ccc8f7-cb10-4694-8837-a4f5f8238c4e' date '15 February 2016' time '5:22:32.180804 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.18' message 'fine tune a bit...' id '509a1767-0097-4eb9-865f-62d2928a6e09' date '15 February 2016' time '4:43:38.028746 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.17' message 'refactor TugrikGciSession>>nbEnd_  ... use blocks to give a bit of control to the end user' id 'a3b0bd18-048a-4bfb-b450-36e803a0f092' date '15 February 2016' time '4:22:13.129038 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.16' message 'now begin working on field accessors for GciTs32xErrSType' id '77d1bc5d-5851-43fe-b994-381ef18ae701' date '15 February 2016' time '11:32:52.963409 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.15' message 'FINALLY! It turns out that I would like references to my GsOopType class to behave like an embedded struct reference and it seems that FFI  can only embed atomic types ... if I create methods using void* then the methods in GciTs32xErrSType are nonstructed properly(i.e. return instance of GsOopType), but the offsets are all wrong because Gs0opType is a 64 bit value ... but now I understand' id '683354b1-b69c-4e39-bbd2-e4dd0807d588' date '15 February 2016' time '10:38:06.986096 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.14' message 'checkpoint ... working on error handling and SigAbort handling ... right now struggling with GciTs32xErrSType class FFI automatic struct creation ... a bug or two in FFI is getting in the way ... rename this class when you get a chance' id 'f34ee532-ef1c-4635-9658-613e6b0ec466' date '14 February 2016' time '10:44:44.202485 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.13' message 'get started on sig abort handling ... hitting local object creation along the way ' id '9e79084a-449f-434b-bbc1-20c1054f1380' date '14 February 2016' time '8:07:26.52305 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.12' message 'non-blocking execute support implemented ... split tests thread safe and non-thread safe  tests' id '7f0bc4b7-3ddc-43c3-b36f-8efbeb2caa70' date '13 February 2016' time '8:11:14.122961 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.11' message 'tweak' id '3ad323fe-4e21-4104-b677-a0a0809439b3' date '13 February 2016' time '5:43:23.879365 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.10' message 'executeString call implemented and passing tests' id '49d6e302-603a-4e46-ba97-44b9af40641d' date '13 February 2016' time '5:15:54.734164 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.9' message 'gci ts session login _and_ logout working (now) tests passing' id 'cc825f5b-caa0-407e-87f0-4dd2be483503' date '13 February 2016' time '3:54:44.071916 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.8' message 'get tests passing again' id '08b7da1b-41f0-490e-93f2-73d83c2b7754' date '13 February 2016' time '3:33:15.613865 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.7' message 'proper definition of GciTs32xErrSType and voila' id 'fb815fa0-909e-4da2-b28c-897ce4820002' date '13 February 2016' time '2:20:52.034458 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.6' message 'gci ts test passing' id '401ce2c9-8bf8-492e-9587-82b40f0fd25d' date '13 February 2016' time '1:47:38.476063 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.5' message 'thread safe library _is_ a separate library ... take appropriate action' id '407e871c-5d41-410c-857d-b3c296e0bd9e' date '13 February 2016' time '12:31:49.416048 pm' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.4' message 'support for thread safe and non-thread safe sessions' id '393c4e79-2897-4859-abd5-d1ed288eb232' date '13 February 2016' time '10:33:36.702064 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.3' message 'create TugricGciSession' id 'a90b073a-5f74-4b07-8dab-40601edf4b87' date '13 February 2016' time '8:54:10.629956 am' author 'dkh' ancestors ((name 'Tugrik-Core-dkh.2' message 'initial rework of Tugric class completed ' id '3df6a604-99ce-4550-b7e8-a2531640012e' date '12 February 2016' time '2:48:34.476136 pm' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())