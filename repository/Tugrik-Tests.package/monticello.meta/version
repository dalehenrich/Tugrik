(name 'Tugrik-Tests-dkh.24' message 'add support for SmallFloat' id '0950ca14-1a34-4907-857e-2519eef3a406' date '2 March 2016' time '3:08:42.549277 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.23' message 'turns out the Gci32xErrSType was created incorrectly (a ''Gci32xErrSType compileFields'' fixes things) ... exceptions and sigabort tests no longer crash ...' id '9f68c702-a9d5-4644-aa74-27ec5013fc9b' date '19 February 2016' time '11:43:34.428255 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.22' message 'add logging to TugrikGciTest>>testSigAbortHandling to deteermine why the gciPollSignal appears to fail ... different session is getting hit with the sigabort message, so if the target session (session2) isn''t sent sigabort.... just keep on trying  until it''s time to give up (can be in interactive session ... fail with information about the bad boy)' id '5563d4cc-a81f-460f-92d8-0bc34661b30e' date '18 February 2016' time '5:03:23.814105 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.21' message 'support for creating local byte objects ' id '38e93d2f-eaec-468f-9d1e-d292f84f31c7' date '18 February 2016' time '4:18:05.987688 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.20' message 'fill some holes in special object handling  (SmallFloat still not handled) ... a couple tests giving trouble on linx (testExceptions and testSigAbortHandling)' id '5b1a32c5-7b93-4714-b601-3a814d4b3c48' date '18 February 2016' time '3:17:51.625549 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.19' message 'checkpoint ... continue error handling work ... most tests pass' id 'b84686f5-cbd0-44ac-8772-9cbd4b618a36' date '16 February 2016' time '10:45:27.617436 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.18' message 'checkpoint ... begin process of introducing error handling' id '53c132cf-5251-4833-8b8d-0226c9d3623e' date '16 February 2016' time '9:37:53.808163 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.17' message 'use gci prefix for the method wrapping gci library calls' id '73efc9a3-3704-48b0-9cec-94fd25d49232' date '16 February 2016' time '8:20:12.894011 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.16' message 'rename Tugric* classes to Tugrik*' id '90f498da-e796-436a-9673-4a376e513b39' date '15 February 2016' time '7:56:51.744898 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.15' message 'add transaction gci functions (abort, cbegin, and commit) - blocking and non-blocking' id '98cc73e6-ae41-42af-9f07-e7beedd4e50d' date '15 February 2016' time '5:22:45.024894 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.14' message 'fine tune a bit...' id 'c30e3df2-5324-47ab-86c5-e65ff2eed051' date '15 February 2016' time '4:43:53.45886 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.13' message 'refactor TugrikGciSession>>nbEnd_  ... use blocks to give a bit of control to the end user' id 'a2bd1778-1a1c-4915-9c6a-3fc2b0f21acc' date '15 February 2016' time '4:22:26.9078 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.12' message 'TugricGciSession>>gciError is now functional and the returned GciTs32xErrSType has all of it''s accessors (excpet perhaps fatal) defined correctly' id '82aa1c77-788b-46fa-9d47-4c1985d84680' date '15 February 2016' time '11:47:07.177753 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.11' message 'now begin working on field accessors for GciTs32xErrSType' id '2c2f1cf8-8032-4755-b580-51c0ae7490fa' date '15 February 2016' time '11:32:39.685687 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.10' message 'checkpoint ... update GciTs32xErrSType fields' id 'fd2d2603-468e-4442-969d-79260990fc5a' date '14 February 2016' time '11:44:25.508764 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.9' message 'checkpoint ... working on error handling and SigAbort handling ... right now struggling with GciTs32xErrSType class FFI automatic struct creation ... a bug or two in FFI is getting in the way ... rename this class when you get a chance' id '36df3adc-ca33-49cf-b1e7-4c8d4135ecf2' date '14 February 2016' time '10:45:29.523402 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.8' message 'get started on sig abort handling ... hitting local object creation along the way ' id '085e8b9b-36bf-47c1-bb7b-a2b9ac9813f9' date '14 February 2016' time '8:08:35.446208 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.7' message 'make the interleaved tests a bit more rigorous and fix some problems' id '4ada6828-9ede-4573-929f-0aa55733ea6f' date '13 February 2016' time '8:42:03.461848 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.6' message 'interleaved nb calls for two concurrent sessions test' id '9edd45b2-df96-4ce2-a61a-1573127ee7ff' date '13 February 2016' time '8:28:10.330211 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.5' message 'non-blocking execute support implemented ... split tests thread safe and non-thread safe  tests' id '1da95184-8ce1-4a7f-aecc-9b554a30d07b' date '13 February 2016' time '8:11:56.007829 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.4' message 'with no apparent non-blocking calls available will have to put the thread safe work on the shelf ...' id '879573c9-0423-42a4-b74e-2b045ead5021' date '13 February 2016' time '5:44:57.938276 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.3' message 'executeString call implemented and passing tests' id 'a519e373-6807-4019-bb20-cf5566cef8f8' date '13 February 2016' time '5:16:54.187267 pm' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.2' message 'add test for non-thread safe sessions' id '6e27dd38-bde2-4379-b959-39b1062c578c' date '13 February 2016' time '10:34:35.852902 am' author 'dkh' ancestors ((name 'Tugrik-Tests-dkh.1' message 'add a login test' id 'f4b55129-0d44-4003-8516-cef98b285299' date '13 February 2016' time '8:54:38.120248 am' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())